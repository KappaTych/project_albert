//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CoreEntity {

    static readonly DestroyEntity destroyEntityComponent = new DestroyEntity();

    public bool isDestroyEntity {
        get { return HasComponent(CoreComponentsLookup.DestroyEntity); }
        set {
            if (value != isDestroyEntity) {
                var index = CoreComponentsLookup.DestroyEntity;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : destroyEntityComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CoreMatcher {

    static Entitas.IMatcher<CoreEntity> _matcherDestroyEntity;

    public static Entitas.IMatcher<CoreEntity> DestroyEntity {
        get {
            if (_matcherDestroyEntity == null) {
                var matcher = (Entitas.Matcher<CoreEntity>)Entitas.Matcher<CoreEntity>.AllOf(CoreComponentsLookup.DestroyEntity);
                matcher.componentNames = CoreComponentsLookup.componentNames;
                _matcherDestroyEntity = matcher;
            }

            return _matcherDestroyEntity;
        }
    }
}
