//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CoreEntity {

    public AttackTypeListenerComponent attackTypeListener { get { return (AttackTypeListenerComponent)GetComponent(CoreComponentsLookup.AttackTypeListener); } }
    public bool hasAttackTypeListener { get { return HasComponent(CoreComponentsLookup.AttackTypeListener); } }

    public void AddAttackTypeListener(System.Collections.Generic.List<IAttackTypeListener> newValue) {
        var index = CoreComponentsLookup.AttackTypeListener;
        var component = (AttackTypeListenerComponent)CreateComponent(index, typeof(AttackTypeListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAttackTypeListener(System.Collections.Generic.List<IAttackTypeListener> newValue) {
        var index = CoreComponentsLookup.AttackTypeListener;
        var component = (AttackTypeListenerComponent)CreateComponent(index, typeof(AttackTypeListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAttackTypeListener() {
        RemoveComponent(CoreComponentsLookup.AttackTypeListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CoreMatcher {

    static Entitas.IMatcher<CoreEntity> _matcherAttackTypeListener;

    public static Entitas.IMatcher<CoreEntity> AttackTypeListener {
        get {
            if (_matcherAttackTypeListener == null) {
                var matcher = (Entitas.Matcher<CoreEntity>)Entitas.Matcher<CoreEntity>.AllOf(CoreComponentsLookup.AttackTypeListener);
                matcher.componentNames = CoreComponentsLookup.componentNames;
                _matcherAttackTypeListener = matcher;
            }

            return _matcherAttackTypeListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CoreEntity {

    public void AddAttackTypeListener(IAttackTypeListener value) {
        var listeners = hasAttackTypeListener
            ? attackTypeListener.value
            : new System.Collections.Generic.List<IAttackTypeListener>();
        listeners.Add(value);
        ReplaceAttackTypeListener(listeners);
    }

    public void RemoveAttackTypeListener(IAttackTypeListener value, bool removeComponentWhenEmpty = true) {
        var listeners = attackTypeListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAttackTypeListener();
        } else {
            ReplaceAttackTypeListener(listeners);
        }
    }
}
