//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CoreEntity {

    public DeadListenerComponent deadListener { get { return (DeadListenerComponent)GetComponent(CoreComponentsLookup.DeadListener); } }
    public bool hasDeadListener { get { return HasComponent(CoreComponentsLookup.DeadListener); } }

    public void AddDeadListener(System.Collections.Generic.List<IDeadListener> newValue) {
        var index = CoreComponentsLookup.DeadListener;
        var component = (DeadListenerComponent)CreateComponent(index, typeof(DeadListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceDeadListener(System.Collections.Generic.List<IDeadListener> newValue) {
        var index = CoreComponentsLookup.DeadListener;
        var component = (DeadListenerComponent)CreateComponent(index, typeof(DeadListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveDeadListener() {
        RemoveComponent(CoreComponentsLookup.DeadListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CoreMatcher {

    static Entitas.IMatcher<CoreEntity> _matcherDeadListener;

    public static Entitas.IMatcher<CoreEntity> DeadListener {
        get {
            if (_matcherDeadListener == null) {
                var matcher = (Entitas.Matcher<CoreEntity>)Entitas.Matcher<CoreEntity>.AllOf(CoreComponentsLookup.DeadListener);
                matcher.componentNames = CoreComponentsLookup.componentNames;
                _matcherDeadListener = matcher;
            }

            return _matcherDeadListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CoreEntity {

    public void AddDeadListener(IDeadListener value) {
        var listeners = hasDeadListener
            ? deadListener.value
            : new System.Collections.Generic.List<IDeadListener>();
        listeners.Add(value);
        ReplaceDeadListener(listeners);
    }

    public void RemoveDeadListener(IDeadListener value, bool removeComponentWhenEmpty = true) {
        var listeners = deadListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveDeadListener();
        } else {
            ReplaceDeadListener(listeners);
        }
    }
}
