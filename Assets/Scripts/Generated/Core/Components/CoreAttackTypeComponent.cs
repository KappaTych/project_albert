//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CoreEntity {

    public AttackTypeComponent attackType { get { return (AttackTypeComponent)GetComponent(CoreComponentsLookup.AttackType); } }
    public bool hasAttackType { get { return HasComponent(CoreComponentsLookup.AttackType); } }

    public void AddAttackType(eAttackType newT) {
        var index = CoreComponentsLookup.AttackType;
        var component = (AttackTypeComponent)CreateComponent(index, typeof(AttackTypeComponent));
        component.t = newT;
        AddComponent(index, component);
    }

    public void ReplaceAttackType(eAttackType newT) {
        var index = CoreComponentsLookup.AttackType;
        var component = (AttackTypeComponent)CreateComponent(index, typeof(AttackTypeComponent));
        component.t = newT;
        ReplaceComponent(index, component);
    }

    public void RemoveAttackType() {
        RemoveComponent(CoreComponentsLookup.AttackType);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CoreMatcher {

    static Entitas.IMatcher<CoreEntity> _matcherAttackType;

    public static Entitas.IMatcher<CoreEntity> AttackType {
        get {
            if (_matcherAttackType == null) {
                var matcher = (Entitas.Matcher<CoreEntity>)Entitas.Matcher<CoreEntity>.AllOf(CoreComponentsLookup.AttackType);
                matcher.componentNames = CoreComponentsLookup.componentNames;
                _matcherAttackType = matcher;
            }

            return _matcherAttackType;
        }
    }
}
